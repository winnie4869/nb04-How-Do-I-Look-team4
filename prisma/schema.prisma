generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Style {
  id            Int        @id @default(autoincrement())
  thumbnail     String
  title         String
  content       String
  nickname      String
  password      String
  viewCount     Int        @default(0)
  curationCount Int        @default(0)
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  categories    Category[]
  curations     Curation[]
  images        Image[]
  tags          StyleTag[]
}

model Image {
  id      Int    @id @default(autoincrement())
  url     String
  styleId Int
  style   Style  @relation(fields: [styleId], references: [id], onDelete: Cascade)
}

model Category {
  id      Int    @id @default(autoincrement())
  key     String
  name    String
  brand   String
  price   Int
  styleId Int
  style   Style  @relation(fields: [styleId], references: [id], onDelete: Cascade)
}

model Tag {
  id     Int        @id @default(autoincrement())
  name   String     @unique
  styles StyleTag[]
}

model StyleTag {
  styleId Int
  tagId   Int
  style   Style @relation(fields: [styleId], references: [id], onDelete: Cascade)
  tag     Tag   @relation(fields: [tagId], references: [id], onDelete: Cascade)

  @@id([styleId, tagId])
}

model Curation {
  id                Int      @id @default(autoincrement())
  nickname          String
  password          String
  content           String
  trendy            Int
  personality       Int
  practicality      Int
  costEffectiveness Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  styleId           Int
  comment           Comment?
  style             Style    @relation(fields: [styleId], references: [id], onDelete: Cascade)
}

model Comment {
  id         Int      @id @default(autoincrement())
  nickname   String
  // password   String   // 암호화된 비밀번호
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  curationId Int      @unique
  curation   Curation @relation(fields: [curationId], references: [id], onDelete: Cascade)
}
